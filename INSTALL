************************************
*   Compilation And Installation   *
************************************

To compile FeatherPad from its source, first install build dependencies. In Debian-based systems, they are:

 * g++ >= 5
 * libx11-dev and libxext-dev (for X11)
 * qtbase5-dev and libqt5x11extras5-dev (for Qt5)
 * libqt5svg5-dev (for hard-coded SVG icons)
 * libhunspell-dev (for spell checking)
 * qttools5-dev-tools (for localization)

In Arch-based systems, the required package are:

 * gcc (or gcc-multilib for multilib systems)
 * libx11 and libxext (for X11)
 * qt5-base and qt5-x11extras (for Qt5)
 * qt5-svg (for hard-coded SVG icons)
 * hunspell (for spell checking)
 * qt5-tools (for localization)

In Red Hat based systems like Fedora:

 * gcc-c++
 * libX11-devel
 * libXext-devel
 * qt5-qtx11extras-devel
 * qt5-qtbase-devel
 * qt5-qtsvg-devel
 * hunspell-devel
 * qt5-qttools-devel

And, finally, in OpenSUSE:

 * gcc-c++
 * libX11-devel
 * libXext-devel
 * libqt5-qtx11extras-devel
 * libqt5-qtbase-devel
 * libqt5-qtsvg-devel
 * hunspell-devel
 * libqt5-qttools-devel


With cmake
==========
Then, open a terminal inside this folder and issue the following commands:

	mkdir build && cd build
	cmake ..
	make
	sudo make install

NOTE: Experimental compilation against Qt6 can be done with `cmake .. -DENABLE_QT5=OFF`. When Qt6 becomes the default version of Qt in some distros, that compilation option will be set to `OFF` by default.

With qmake
==========
If you prefer qmake, use these commands instead:

	qmake && make
	sudo make install

You might need to put the full path of qmake in the first command (it can belong to Qt5 or Qt6). After a qmake compilation, you could clean the source directory with this command:

	make distclean

*******************************
*   Compilation without X11   *
*******************************

If, for whatever reason, you do not want the X11 support, you could first turn on the option "WITHOUT_X11" with cmake:

	cmake .. -DWITHOUT_X11=ON

Or, if you use qmake:

	qmake WITHOUT_X11=YES

The result will have all features except for virtual desktop awareness and tab DND.

Please also note that, on Linux, FeatherPad works under Wayland and you do not need to disable its X11 support for that.

Compilation on Haiku OS or macOS does not require "WITHOUT_X11" either.

**********************************
*   Translation (Localization)   *
**********************************

The file 'featherpad/data/translations/featherpad.ts' can serve as the basis for GUI translation. The translated file should be saved in the same directory as "featherpad_LN.ts", where "LN" is the abbreviation for the target language, like "de", "fr", "ja_JP", etc.

Optionally, also the file 'featherpad/data/help' or only its shortcuts list can be manually translated as "featherpad/data/help_LN". If the help file is translated, it will be shown instead of the English help, although it does not follow the translation standards.

If you have translated FeatherPad's GUI (or its help file) into your language, please make a "Pull Request" (PR) at https://github.com/tsujan/FeatherPad for your work to be merged into FeatherPad!
